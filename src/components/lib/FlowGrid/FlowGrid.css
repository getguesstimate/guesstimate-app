@import './styles/variables.css';

.FlowGrid {
  position: relative;
  margin-left: 1em;
  margin-top: 1em;

  .canvas {
    position: relative;
    z-index: 1;
  }
}

.FlowGrid-Container {
  float: left;
}

.FlowGridRow{
  display: flex;
  align-items: stretch;
  flex-direction: row;
}

.FlowGridCell {
  width: 210px;
  min-width: 210px;
  display: flex;
  flex: 1;
  min-height: 60px;
}

.FlowGrid.withLines .FlowGridCell{
  border-right: 1px dashed rgba(0, 25, 95, 0.09);
  border-bottom: 1px dashed rgba(0, 25, 95, 0.09);
}

.FlowGridFilledCell {
  display: flex;
  width: 100%;
  padding: 3px;
}

.showEdges .FlowGridFilledCell {
  padding: 8px;
}

.FlowGridEmptyCell {
  width: 100%;
  display: flex;
  width: 100%;
}

.FlowGrid.isSelectable {
  .FlowGridEmptyCell {
    cursor: pointer;
  }

  .FlowGridCell.hovered .FlowGridEmptyCell{
    background-color: rgba(79, 152, 197, 0.25);
  }

  .FlowGridCell.hovered.hasItem .FlowGridFilledCell{
    background-color: rgba(75, 138, 177, 0.3);
    border-radius: 1px;
  }
}

.FlowGridEmptyCell:focus {
  outline: none;
}

.IsOver .FlowGridEmptyCell, .IsOver .isDragging {
  transition: background-color 0.2s ease;
  background-color: rgba(127, 149, 160, 0.81);
}

svg.edge {
  position:absolute;
  top: 0;
  z-index: 0;
}

svg.edge  path.basic-arrow {
  stroke-linecap:'round';
  stroke-linejoin: 'round';
  stroke-dasharray:'5,5';
  stroke-width: 3px;
}

.arrow {
  stroke-width: 0;
}

$default: #899eb6;
$unconnected: rgba(77, 121, 175, 0.06);
$unconnected-head: rgba(77, 121, 175, 0.06);
$ancestor: rgb(123, 158, 149);
$descendant: rgb(118, 137, 160);
$errors: #B59893;
$screenshot: rgb(128, 154, 185);

svg.edge  path.basic-arrow.unconnected {
  stroke: $unconnected;
}
.arrow.unconnected{
  fill: $unconnected-head;
}

svg.edge  path.basic-arrow.default {
  stroke: $default;
}
.arrow.default{
  fill: $default;
}

.screenshot svg.edge  path.basic-arrow.default {
  stroke: $screenshot;
}
.screenshot .arrow.default{
  fill: $screenshot;
}

svg.edge  path.basic-arrow.hasErrors.hasErrors {
  stroke: $errors;
}
.arrow.hasErrors.hasErrors{
  fill: $errors;
}

svg.edge  path.basic-arrow.ancestor {
  stroke: $ancestor;
}
.arrow.ancestor{
  fill: $ancestor;
}

svg.edge  path.basic-arrow.descendant {
  stroke: $descendant;
}
.arrow.descendant{
  fill: $descendant;
}

.FlowGrid .Region {
   position: absolute;
   border-radius: 3px;
}

.FlowGrid .Region.selected {
   background: rgba(153, 186, 208, 0.87);
}

.FlowGrid .Region.fill {
   border: 1px dashed rgba(0, 0, 0, 0.4);
}

.FlowGrid .Region.copied {
   border: 2px dashed rgba(7, 115, 167, 0.75);
   background: rgba(153, 186, 208, 0.17);
}

.FlowGrid .Region.analyzed {
   background: linear-gradient(45deg, rgba(72, 187, 90, 0.66), rgba(120, 203, 149, 0.65));
   border-radius: 0;
}

.FlowGridCell {
  position: relative;
}

.FlowGridCell .AutoFillToken--outer {
  position: absolute;
  right: -1.25em;
  bottom: -1.25em;
  z-index: 2;
  border-radius: 0.5em;
  padding: .9em;
  width: 2.5em;
  height: 2.5em;
  transition: padding .05s;
}

.FlowGridCell .AutoFillToken--outer:hover {
  padding: 0.5em;
  transition: padding .05s;
}

.FlowGridCell .AutoFillToken {
   cursor: crosshair;
   height: 100%;
   width: 100%;
   border-radius: 0.1em;
   background: rgb(90, 141, 177);
 }
