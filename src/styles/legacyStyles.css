@import "./variables.css";

/* src/components/distributions/editor/style.css */
$flash-duration-sec: 0.4s;

.TextInput {
  background-color: rgba(0, 0, 0, 0);
  box-shadow: none;
  border: none;
  border-radius: 1px;
  outline: none;
  resize: none;
  transition: background-color 0.3s;
  padding: 0.2em;
  max-width: 100%;
  &:focus {
    outline: none;
    box-shadow: none;
    color: $black-3;
  }

  float: left;
  width: 100%;
  padding: 2px;
  color: rgba(69, 98, 134, 0.83);
  font-weight: 300;
  line-height: 1.2em;
}

.TextInput {
  line-height: 1.3em;
  font-size: 0.95em;
  border-radius: 2px;
  padding: 0;
  border: 2px solid transparent;
  transition: border-color $flash-duration-sec ease,
    background-color $flash-duration-sec ease;

  .fact {
    color: #483567;
    background-color: #e5dbf7;
  }

  .suggestion {
    background-color: #b5ddff;
  }

  .input {
    border-radius: 0.05em;
    font-size: 0.94em;
    padding: 0.05em 0.1em 0 0.1em;
    margin: auto 0.07em auto 0.07em;
    font-weight: 500;

    &.valid {
      color: $green-3;
      background-color: $green-4;
    }

    &.error {
      color: #560606;
      background-color: #ff9e9e;
    }
  }

  &.flashing {
    border: 2px solid #0fb963;
    background-color: #c9e8c0;
  }
}

.Guesstimate.large .TextInput {
  font-size: 1.5em;
  border-radius: 2px;
  font-weight: 100;
  color: #666;
  background: #eee;
  padding: 2px 4px;
}

.Guesstimate .GuesstimateInputForm {
  display: flex;
  flex-direction: column;
}

.Guesstimate .GuesstimateInputForm--row {
  flex: 1;
}

.DistributionSelector {
  width: 100%;
}

.DistributionSelector hr {
  border: none;
  border-top: 1px solid $grey-1;
  margin: 4px 0;
}

.Guesstimate .DistributionIcon.DistributionIcon {
  font-size: 1em;
  padding-top: 2px;
  padding-left: 2px;
  padding-right: 2px;
  position: relative;
  height: 24px;
  width: 24px;
  padding-top: 0;
  margin: 0 0 0 3px;
}

.Guesstimate.large .DistributionIcon.DistributionIcon {
  height: 34px;
  width: 34px;
}

.DistributionIcon.button.selected {
  background-color: $blue-2;
}

.DistributionIcon img {
  width: 24px;
  opacity: 1;
  position: absolute;
  left: 0;
  right: 0;
  top: 4px;
  bottom: 0;
}

.GuesstimateTypeQuestion {
  float: right;
  margin-right: 4px;
  font-size: 1.2em;
  color: $grey-2;
  opacity: 0.6;
  margin-top: 3px;
}

.Guesstimate.large .GuesstimateTypeQuestion {
  font-size: 2em;
  margin-top: 0;
}

.GuesstimateTypeQuestion:hover {
  opacity: 1;
  cursor: pointer;
}

.Guesstimate.large .DistributionIcon img {
  width: 34px;
}

.DistributionIcon.DistributionSelectorToggle {
  display: inline-block;
  color: #999;
  float: right;
}

.DistributionIcon.DistributionSelectorToggle {
  opacity: 0.6;
}

.button.DistributionIcon.DistributionSelectorToggle {
  cursor: pointer;
  border-radius: 5px;
}

.button.DistributionIcon.DistributionSelectorToggle:hover {
  opacity: 1;
}

.button.DistributionIcon.DistributionSelectorToggle:hover {
  background-color: $grey-1;
}

/* src/components/distributions/summary/style.css */
.sup {
  font-size: 0.6em;
  vertical-align: super;
}

/* src/components/metrics/card/MetricCardViewSection/style.css */
.MetricCardViewSection {
  position: relative;
  display: flex;
  flex-direction: column;
  flex: 1;
}

.metricCard .MetricCardViewSection.hasErrors .error-message {
  color: #5f0909;
  font-size: 0.8em;
  font-weight: 500;
  line-height: 1.1em;
  padding: 2px 9px;
}

.metricCard .MetricCardViewSection.hasErrors .StatsSectionErrors.minor {
  background-color: rgb(236, 202, 199);
}

.metricCard .MetricCardViewSection.hasErrors .StatsSectionErrors.serious {
  background-color: #e48585;
}

.MetricCardViewSection > .StatsSection .StatsSectionErrors.serious .fa {
  color: #a74b4b;
  font-size: 1.5em;
}

.MetricCardViewSection > .StatsSection .StatsSectionErrors.serious i {
  color: #a74b4b;
  font-size: 1.8em;
}

.MetricCardViewSection > .StatsSection .StatsSectionErrors.minor .fa {
  font-size: 1.4em;
  color: #d48a8a;
  margin-top: 4px;
}

.metricCard.input .MetricCardViewSection .DistributionSummary {
  color: #222;
}

.metricCard.output .MetricCardViewSection .DistributionSummary {
  font-weight: 700;
  color: #111;
}

.MetricCardViewSection > .StatsSection {
  width: 100%;
  float: left;
  min-height: 10px;
  flex: 5;
  display: flex;
  flex-direction: column;
}

.MetricCardViewSection > .StatsSection .StatsSectionBody {
  padding: 8px 6px 4px 7px;
  flex: 5;
}

.MetricCardViewSection > .StatsSection .StatsSectionErrors {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 40px;
}

.MetricCardViewSection > .StatsSection .StatsSectionErrors.isHidden {
  display: none;
}

.MetricCardViewSection > .StatsSection .StatsSectionErrors.padTop {
  margin-top: 5px;
}

.metricCard .DistributionSummary {
  font-weight: 300;
  font-family: Lato, Arial, sans-serif;
  color: #444;
}

.MetricCardViewSection .StatsSectionTable {
  padding: 0 7px;
  background-color: rgba(255, 255, 255, 0.3);
  margin-top: 10px;
  flex: 1;
}

/* src/components/metrics/card/SensitivitySection/style.css */
.SensitivitySection.SMALL {
  height: 70px;
  padding-left: 5px;
  padding-right: 4px;
  padding: 3px 4px 6px 5px;
  background-color: rgba(189, 189, 189, 0.14);
  flex: 0;
  position: relative;
}

.SensitivitySection.LARGE svg path.dot {
  fill: rgba(88, 173, 109, 0.12);
}
.SensitivitySection.SMALL svg path.dot {
  fill: rgba(88, 173, 109, 0.18);
}
.SensitivitySection svg .axis line {
  stroke: #ced6dc;
}
.SensitivitySection svg .axis .tick {
  fill: #ced6dc;
}
.SensitivitySection svg .axis .domain {
  fill: #e2efe9;
  stroke: none;
}

.metricCard.intermediate .SensitivitySection.LARGE svg path.dot {
  fill: rgba(90, 113, 89, 0.12);
}

.metricCard.intermediate .SensitivitySection.SMALL svg path.dot {
  fill: rgba(90, 113, 89, 0.18);
}

.SensitivitySection svg .axis text {
  font-size: 0.9em;
  fill: #7a909a;
}

.SensitivitySection svg text.axis.label {
  fill: #3c4448;
  font-size: 1em;
  font-weight: 700;
}

/* src/components/metrics/card/style.css */
.metricCard {
  max-width: 30em;
  white-space: normal;
  z-index: 0;
  font-size: 1.25em;
  position: relative;
  font-weight: 300;
  overflow: hidden;
}

.metricCard input {
  transition: background-color 0.2s;
}

.metricCard:not(.titleView) {
  background-color: rgba(255, 255, 255, 0.975);
}

.metricCard.intermediate:not(.titleView) {
  background-color: rgba(242, 244, 247, 0.94);
}

.metricCard.noedge:not(.titleView) {
  background-color: rgba(240, 242, 245, 0.88);
}

.selected .metricCard:not(.titleView) {
  background-color: rgba(255, 255, 255, 0.975);
}

.hovered.selected .metricCard {
  background-color: white;
}

.hovered .metricCard {
  background-color: #f4f4f4;
}

.metricCard > .section {
  position: relative;
  padding: 0.2em 0.2em 0.2em 0.2em;
}

.metricCard .section.editing {
  border-top: 1px solid #ddd;
  border-radius: 0 0 2px 2px;
  flex: 0 0 auto;
}

.ReactModal__Overlay--after-open {
  z-index: 5;
}

.ReactModal__Overlay--after-open {
  overflow: auto;
}

/* src/components/metrics/card/token/style.css */
.MetricToken {
  margin-top: 5px;
  margin-right: 3px;
}

.MetricToken .ui.tiny.label {
  font-size: 0.85rem;
  background-color: $green-1 !important;
  border-radius: 2px;
  padding: 0.4em 0.45em 0.35em;
  margin-top: 2px;
}

.MetricToken .hover-icon {
  float: right;
  padding: 2px 6px;
  color: $blue-5;
  border-radius: 2px;
  font-size: 1em;
}

.screenshot .MetricToken .hover-icon {
  display: none;
}

.MetricToken .hover-hide {
  opacity: 0.6;
  padding: 0 6px 2px;
}

.hovered .MetricToken .hover-hide {
  display: none;
}

.MetricToken .hover-toggle {
  cursor: pointer;
  display: none;
}

.MetricToken .hover-toggle:hover {
  color: white;
  background-color: $grey-2;
}

.hovered .MetricToken .hover-toggle {
  display: block;
}

/* src/components/metrics/modal/style.css */
.metricModal .Guesstimate.large input {
  background-color: $grey-eee;
}

/* src/components/pages/base/style.css */
.PageBase {
  font-size: 1.1em;
}

.PageBase h2 {
  font-size: 1.25em;
  margin-bottom: 6px;
}

.PageBase h1 {
  color: $blue-1;
}

/* src/components/simulations/stat_table/style.css */
table.MetricStatTable {
  font-weight: 500;
  font-size: 11px;
  color: #666;
  width: 100%;
}

table.MetricStatTable td {
  text-align: left;
  padding: 0;
  line-height: 1.5em;
}

/* src/components/spaces/canvas/style.css */
.canvas-space::selection {
  background-color: none;
}

.canvas-space .inner-editor input {
  text-align: left;
}

.canvas-space .inner-editor .header .save-message {
  color: #888;
}

/* src/components/spaces/index/style.css */
.SpacesIndex .nextPage {
  margin-bottom: 4em;
  margin-top: 2em;
  text-align: center;
}

.SpacesIndex a.header-action {
  color: #666;
  margin: 0.1em 1.1em 0 0;
  font-size: 1em;
  float: left;
  padding: 0.4em 0.8em;
  border-radius: 2px;

  &:hover {
    background-color: #e3e8ec;
  }

  .fa {
    margin-left: 0.4em;
    font-size: 0.8em;
  }
}

/* src/components/spaces/show/style.css */
.spaceShow {
  flex: 2;
  display: flex;
  flex-direction: column;
  height: 100%;
  background-color: #dfe1e4;
}

.spaceShow.screenshot {
  background-color: #c2cdd6;
}

.canvas-space {
  flex: 1;
  max-height: 100%;
}

.canvas-space:not(.overflow-hidden) {
  overflow: auto;
}

.canvas-space.overflow-hidden {
  overflow: hidden;
}

.spaceShow > .content {
  display: flex;
  max-height: 100%;
  align-items: start;
  flex: 1;
}

.header-action-tooltip.header-action-tooltip.header-action-tooltip {
  background: rgba(60, 64, 68, 0.95);
  opacity: 1;
  padding: 4px 13px;
  border-radius: 2px;
  transition: none;

  &.place-top:after {
    border-top: 6px solid rgba(60, 64, 68, 0.95);
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
  }

  &.place-top {
    margin-top: 0px;
  }

  &.place-bottom {
    margin-top: 2px;
  }

  &.place-bottom:after {
    border-bottom: 6px solid rgba(60, 64, 68, 0.95);
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    top: -6px;
    margin-left: -6px;
  }
}

/* src/components/utility/ComponentEditor/style.css */
.ComponentEditor > .reference {
  padding: 4em 10px;
}

.ComponentEditor.grey .Component {
  background: #f7f5f5;
}

.ComponentEditor.blue .Component {
  background: linear-gradient(-140deg, #4dc7b7, #489acc);
}

.ComponentEditor .Component {
  padding: 5px;
}

/* src/components/utility/card/style.css */
.Card {
  background-color: rgba(255, 255, 255, 1);
  border-radius: 0.3em;
  margin-top: 2px;
  padding: 0.5em 0;
  float: left;
  position: relative;
}

.Card.shadow {
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.35);
}

.Card.narrow {
  width: 18em;
}

.Card.normal {
  width: 30em;
}

.Card .ui.form textarea {
  font-size: 1.2em;
  background-color: $grey-1;
  margin-bottom: 2em;
}

.Card h3 {
  color: #888;
  font-weight: 200;
  margin: 0;
}

.Card .section {
  margin: 1em 0;
}

.Card .header-divider {
  padding: 0.5em 0 0.3em 1em;
  margin-bottom: 0.25em;
  float: left;
  width: 100%;
}

.Card a {
  cursor: pointer;
}

.Card a.disabled {
  cursor: not-allowed;
}

.Card hr {
  width: 100%;
  border: none;
  border-bottom: 1px solid $grey-1;
}

.Card-content {
  width: 100%;
  position: relative;
}

.Card-header {
  text-align: center;
  margin: 0.25em 0 0.75em;
}

.Card .Card-close {
  position: absolute;
  top: 9px;
  right: 12px;
  padding-top: 0px;
}

.Card .Card-content .Card-close:hover {
  color: #666;
}

.Card .CardListSection {
  padding: 0.8em;
  color: #555;
}

.Card ol,
.Card ul {
  list-style: none;
  padding: 0;
  margin: 0 0 0.25em 0;
  float: left;
  width: 100%;
}

.Card li .row {
  margin: 0;
}

.Card li .action {
  padding: 0.5em 0;
  border-radius: 0;
}

.Card li .action.hasChildren {
  padding: 1em 0 0.5em;
}

.Card-body.padded {
  padding: 0 1em;
}

.Card li .action.selected {
  background-color: $grey-1;
}

.Card li a {
  width: 100%;
  float: left;
}

.Card li .icons {
  text-align: center;
  color: $grey-2;
  font-size: 1.25em;
}

.Card li .icons i {
  font-size: 1.5em;
}

.Card li .action.hasChildren .icons {
  font-size: 2.5em;
}

.Card li .icons img {
  width: 35px;
}

.Card li .icons img.circle {
  border-radius: 3em;
}

.Card li .info-section {
  color: #555;
  text-align: left;
}

.Card li .info-section > .header {
  font-weight: bold;
  margin-bottom: 5px;
  font-size: 1.25em;
}

.Card li .info-section > .content {
  padding: 0.5em 0;
  font-size: 1.1em;
}

.Card li .info-section .warning {
  margin-top: 10px;
}

.Card li a:hover:not(.disabled) {
  background-color: $blue-2;
}

/* src/routes/home/style.css */
.wistia_responsive_padding {
  padding: 56.25% 0 0 0;
  position: relative;
}

.wistia_responsive_wrapper {
  height: 100%;
  width: 100%;
  position: absolute;
  left: 0;
  top: 0;
}

.wistia_embed {
  display: inline-block;
  height: 240px;
  width: 415px;
  margin-top: 5em;
}

/* src/components/spaces/show/Tutorial/pageStyle.css */
.tutorialPage {
  margin-bottom: 2em;
  min-height: 35em;

  p {
    font-size: 1.1em;
    text-align: justify;
  }

  table.ui {
    margin-top: 1.5em;

    td {
      padding: 0.5em 1em;
      line-height: 1.3em;
    }
  }
}

/* src/routes/main.css */
.container-fluid.full-width {
  width: 100%;
}

body {
  height: 100%;
}

#__next {
  height: 100%;
}

body.remove-elev #_elev_io {
  display: none !important;
}

.MainConfirmation {
  background: white;
  padding: 3em 4em;
  border-radius: 2px;
  text-align: center;
  min-width: 12em;
  max-width: 600px;
}

.MainConfirmation .ui.button {
  margin-right: 1em;
}

.MainConfirmation h1 {
  margin-bottom: 2em;
  font-size: 1.6em;
  color: #333;
  line-height: 1.8em;
}

.public-DraftEditorPlaceholder-root {
  margin: 0 0 -30px;
  color: #a9a9a9;
}

.public-DraftEditor-content:focus {
  color: $black-3;
}

/* FlowGrid.css */
.FlowGrid {
  position: relative;
  margin-left: 1em;
  margin-top: 1em;

  .canvas {
    position: relative;
    z-index: 1;
  }
}

.FlowGridRow {
  display: flex;
  align-items: stretch;
  flex-direction: row;
}

.FlowGridCell {
  display: flex;
  flex: 1;
  min-height: 60px;
}

.FlowGrid.withLines .FlowGridCell {
  border-right: 1px dashed rgba(0, 25, 95, 0.09);
  border-bottom: 1px dashed rgba(0, 25, 95, 0.09);
}

/* draggable by react-dnd */
.FlowGridCell > div {
  display: grid;
  place-items: stretch;
}

.FlowGridFilledCell {
  display: grid;
  place-items: stretch;
  width: 100%;
  padding: 3px;
  outline: none;
}

.showEdges .FlowGridFilledCell {
  padding: 8px;
}

.FlowGridEmptyCell {
  width: 100%;
  display: flex;
  width: 100%;
}

.FlowGrid.isSelectable {
  .FlowGridEmptyCell {
    cursor: pointer;
  }

  .FlowGridCell.hovered .FlowGridEmptyCell {
    background-color: rgba(79, 152, 197, 0.25);
  }

  .FlowGridCell.hovered.hasItem .FlowGridFilledCell {
    background-color: rgba(75, 138, 177, 0.3);
    border-radius: 1px;
  }
}

.FlowGridEmptyCell:focus {
  outline: none;
}

.IsOver .FlowGridEmptyCell,
.IsOver .isDragging {
  transition: background-color 0.2s ease;
  background-color: rgba(127, 149, 160, 0.81);
}

svg.edge {
  position: absolute;
  top: 0;
  z-index: 0;
}

svg.edge path.basic-arrow {
  stroke-linecap: "round";
  stroke-linejoin: "round";
  stroke-dasharray: "5,5";
  stroke-width: 3px;
}

.arrow {
  stroke-width: 0;
}

$default: #899eb6;
$unconnected: rgba(77, 121, 175, 0.06);
$unconnected-head: rgba(77, 121, 175, 0.06);
$ancestor: rgb(149, 182, 178);
$ancestor-1-degree: rgb(67, 121, 107);
$descendant: rgb(158, 172, 188);
$descendant-1-degree: rgb(86, 104, 125);
$errors: #b59893;
$screenshot: rgb(128, 154, 185);

svg.edge path.basic-arrow.unconnected {
  stroke: $unconnected;
}
.arrow.unconnected {
  fill: $unconnected-head;
}

svg.edge path.basic-arrow.default {
  stroke: $default;
}
.arrow.default {
  fill: $default;
}

.screenshot svg.edge path.basic-arrow.default {
  stroke: $screenshot;
}
.screenshot .arrow.default {
  fill: $screenshot;
}

svg.edge path.basic-arrow.hasErrors.hasErrors {
  stroke: $errors;
}
.arrow.hasErrors.hasErrors {
  fill: $errors;
}

svg.edge path.basic-arrow.ancestor {
  stroke: $ancestor;
}
.arrow.ancestor {
  fill: $ancestor;
}

svg.edge path.basic-arrow.ancestor-1-degree {
  stroke: $ancestor-1-degree;
}
.arrow.ancestor-1-degree {
  fill: $ancestor-1-degree;
}

svg.edge path.basic-arrow.descendant {
  stroke: $descendant;
}
.arrow.descendant {
  fill: $descendant;
}

svg.edge path.basic-arrow.descendant-1-degree {
  stroke: $descendant-1-degree;
}
.arrow.descendant-1-degree {
  fill: $descendant-1-degree;
}

.FlowGrid-Container {
  float: left;
}

.FlowGrid .Region {
  position: absolute;
  border-radius: 3px;
}

.FlowGrid .Region.selected {
  background: rgba(153, 186, 208, 0.87);
}

.FlowGrid .Region.fill {
  border: 1px dashed rgba(0, 0, 0, 0.4);
}

.FlowGrid .Region.copied {
  border: 2px dashed rgba(7, 115, 167, 0.75);
  background: rgba(153, 186, 208, 0.17);
}

.FlowGrid .Region.analyzed {
  background: linear-gradient(
    45deg,
    rgba(72, 187, 90, 0.66),
    rgba(120, 203, 149, 0.65)
  );
  border-radius: 0;
}

.FlowGridCell {
  position: relative;
}

.FlowGridCell .AutoFillToken--outer {
  position: absolute;
  right: -1.25em;
  bottom: -1.25em;
  z-index: 2;
  border-radius: 0.5em;
  padding: 0.9em;
  width: 2.5em;
  height: 2.5em;
  transition: padding 0.05s;
}

.FlowGridCell .AutoFillToken--outer:hover {
  padding: 0.5em;
  transition: padding 0.05s;
}

.FlowGridCell .AutoFillToken {
  cursor: crosshair;
  height: 100%;
  width: 100%;
  border-radius: 0.1em;
  background: rgb(90, 141, 177);
}
